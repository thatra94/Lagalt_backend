// <auto-generated />
using System;
using Lagalt.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lagalt.Migrations
{
    [DbContext(typeof(LagaltContext))]
    [Migration("20210322094241_InitialDB")]
    partial class InitialDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lagalt.Models.Industry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Industries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Webutvikling"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Musikk"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Spillutvikling"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Film"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Animasjon"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Foto"
                        });
                });

            modelBuilder.Entity("Lagalt.Models.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(2083)
                        .HasColumnType("nvarchar(2083)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kreativt forum",
                            ProjectId = 1,
                            Url = "https://www.github.com/kreativt-forum"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Github",
                            ProjectId = 2,
                            Url = "https://www.github.com/valheim"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hjemmeside",
                            ProjectId = 2,
                            Url = "https://www.valheim.no"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Sentinel hjemmeside",
                            ProjectId = 3,
                            Url = "https://www.sentinel.net"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Githubside",
                            ProjectId = 4,
                            Url = "https://www.github.com/buggy"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Hjemmeside",
                            ProjectId = 5,
                            Url = "https://www.Fronter.no"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Vår hjemmeside",
                            ProjectId = 6,
                            Url = "https://www.twentysixtone.no"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Projektside",
                            ProjectId = 7,
                            Url = "https://www.github.com/underrail"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Hjemmeside",
                            ProjectId = 8,
                            Url = "https://www.deepderelict.com"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Hjemmeside",
                            ProjectId = 9,
                            Url = "https://www.ebaumbsverden.no"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Prosjekctside",
                            ProjectId = 10,
                            Url = "https://www.github.com/bokklubben"
                        });
                });

            modelBuilder.Entity("Lagalt.Models.Portfolio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Portfolios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Når jeg gikk på skolen",
                            Link = "https://github.com/thatra94/Lagalt_backend/tree/main/Lagalt",
                            Name = "Skole-prosjekt",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Link = "https://www.youtube.com/watch?v=dkZvM1Kq-0s&ab_channel=D4Darious",
                            Name = "Film-prosjekt",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Link = "https://github.com/ellerish/FileSystemManager",
                            Name = "Hobby prosjekt",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Link = "https://www.youtube.com/watch?v=SRcnnId15BA&ab_channel=50CentVEVOr",
                            Name = "Musikk prosjekt",
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            Link = "https://www.youtube.com/watch?v=SRcnnId15BA&ab_channel=50CentVEVOr",
                            Name = "Musikkvideo",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Lagalt.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(2083)
                        .HasColumnType("nvarchar(2083)");

                    b.Property<int>("IndustryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IndustryId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Webapplikasjon hvor man opprette prosjekter og finne prosjektmedlemmer",
                            ImageUrl = "https://external-preview.redd.it/iDdntscPf-nfWKqzHRGFmhVxZm4hZgaKe5oyFws-yzA.png?auto=webp&s=38648ef0dc2c3fce76d5e1d8639234d8da0152b2",
                            IndustryId = 1,
                            Name = "Kreativt Forum",
                            Status = "Under utvikling",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Description = "Sandkassespill satt til vikingtiden. Litt som minecraft",
                            ImageUrl = "https://img.gfx.no/2652/2652343/ss_758a730d41536d195249fe87b81ea26400c6b56e.956x539.png",
                            IndustryId = 3,
                            Name = "Valheim",
                            Status = "Opprettet",
                            UserId = 6
                        },
                        new
                        {
                            Id = 3,
                            Description = "Er et space exploration spill satt i nær fremtid",
                            ImageUrl = "https://res.cloudinary.com/jerrick/image/upload/fl_progressive,q_auto,w_1024/d4mmmwmkthezbqmwtvxy.jpg",
                            IndustryId = 3,
                            Name = "The Sentinel",
                            Status = "Opprettet",
                            UserId = 10
                        },
                        new
                        {
                            Id = 4,
                            Description = "Et sporingssystem for programvarefeil. Holder orden på rapporte programvarefeil i et uviklingsprosjekt.",
                            ImageUrl = "https://thumbs.dreamstime.com/b/cartoon-bug-29199888.jpg",
                            IndustryId = 1,
                            Name = "Buggy",
                            Status = "På vent",
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            Description = "Alles favorittplattform skal pusses opp!",
                            ImageUrl = "https://wiki.usn.no/ewiki/images/a/a8/Fronter.jpg",
                            IndustryId = 1,
                            Name = "Fronter 2.0",
                            Status = "Under utvikling",
                            UserId = 20
                        },
                        new
                        {
                            Id = 6,
                            Description = "Spillefilm satt til 2061. Sjangeren er sci-fi. Trenger fotografer, set-designere, og kostymedesignere",
                            ImageUrl = "https://cdn.pixabay.com/photo/2019/10/08/14/24/futuristic-4535174_960_720.jpg",
                            IndustryId = 4,
                            Name = "2061",
                            Status = "Ferdig",
                            UserId = 11
                        },
                        new
                        {
                            Id = 7,
                            Description = "Turbasert rollespill satt i en dystopisk fremtid",
                            ImageUrl = "https://cdn.akamai.steamstatic.com/steam/apps/250520/header.jpg?t=1588072489",
                            IndustryId = 3,
                            Name = "UnderRail",
                            Status = "Under utvikling",
                            UserId = 5
                        },
                        new
                        {
                            Id = 8,
                            Description = "Turbasert strategispill og RPG",
                            ImageUrl = "https://cdn.akamai.steamstatic.com/steam/apps/698640/header.jpg?t=1613491211",
                            IndustryId = 3,
                            Name = "Deep Sky Derelicts",
                            Status = "Under utvikling",
                            UserId = 6
                        },
                        new
                        {
                            Id = 9,
                            Description = "Nettside som skal inneholde morsomme videoer og bilder",
                            ImageUrl = "https://pbs.twimg.com/profile_images/3467586385/2d15c551d729114e3646434ea7a09a46_400x400.png",
                            IndustryId = 1,
                            Name = "Ebaums Verden",
                            Status = "Opprettet",
                            UserId = 15
                        },
                        new
                        {
                            Id = 10,
                            Description = "Nettside for bokinteresserte. For diskusjon og anbefalinger av bøker",
                            ImageUrl = "https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/old-books-arranged-on-shelf-royalty-free-image-1572384534.jpg",
                            IndustryId = 1,
                            Name = "Bokklubben",
                            Status = "Under utvikling",
                            UserId = 4
                        });
                });

            modelBuilder.Entity("Lagalt.Models.ProjectApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MotivationText")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectApplications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MotivationText = "Jeg vil gjerne være med på prosjektet fordi jeg er god",
                            ProjectId = 1,
                            Status = "Pending",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            MotivationText = "Dette er noe for meg, jeg liker sporingssystemer",
                            ProjectId = 4,
                            Status = "Approved",
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            MotivationText = "Har lyst til å være med",
                            ProjectId = 2,
                            Status = "Declined",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Lagalt.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "WebDeveloper"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Disco Jokey"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kommunikator"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Problemløser"
                        },
                        new
                        {
                            Id = 5,
                            Name = "MovieExpert"
                        },
                        new
                        {
                            Id = 6,
                            Name = "AI Tech"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Unity"
                        },
                        new
                        {
                            Id = 8,
                            Name = "C#"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Blender"
                        },
                        new
                        {
                            Id = 10,
                            Name = "HTML"
                        },
                        new
                        {
                            Id = 11,
                            Name = "CSS"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Javascript"
                        },
                        new
                        {
                            Id = 13,
                            Name = "React"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Angular"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Ableton"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Java"
                        },
                        new
                        {
                            Id = 17,
                            Name = "PHP"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Animation"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Klipper"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Python"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Vue"
                        });
                });

            modelBuilder.Entity("Lagalt.Models.Theme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Themes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "RPG"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Roguelike"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Creativity"
                        },
                        new
                        {
                            Id = 6,
                            Name = "3D"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Sci-fi"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Læringsplattform"
                        },
                        new
                        {
                            Id = 9,
                            Name = "LMS"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Dystopisk"
                        },
                        new
                        {
                            Id = 11,
                            Name = "kostymedesign"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Eventyr"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Utdanning"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Web"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Sandkassespill"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Vikingtid"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Overlevelsesspill"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Utvikling"
                        },
                        new
                        {
                            Id = 19,
                            Name = "PMS"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Filmproduksjon"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Humor"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Memes"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Bøker"
                        });
                });

            modelBuilder.Entity("Lagalt.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(2083)
                        .HasColumnType("nvarchar(2083)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Hei, jeg heter Alias. Jeg liker Bøker ",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Example User",
                            UserId = "example-token"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Gamer til tusen",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Another User",
                            UserId = "another-token"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Gått på skole i mange år, liker å dra på konsert noen ganger",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Marius Jansen",
                            UserId = "another-token"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Jeg har en hund og liker å gå på tur",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Karl Karlsen",
                            UserId = "12ab12ab"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Jeg liker bannan og laban",
                            ImageUrl = "https://static.wikia.nocookie.net/motibrostet/images/2/2b/Nils_Svendsen.png/revision/latest?cb=20151231015619",
                            Name = "Nils",
                            UserId = "another-token1"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Jeg er sjef i C-konsult og liker å pusle med kreative prosjekter på fritiden",
                            ImageUrl = "https://static.wikia.nocookie.net/motibrostet/images/8/87/Karl_Reverud.png/revision/latest/scale-to-width-down/340?cb=20200223142852",
                            Name = "Karl Reverud",
                            UserId = "another-token2"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Jeg er en pensjonist som er glad i likkør",
                            ImageUrl = "https://1.bp.blogspot.com/-9qzG44d0m30/XfO_Fu_b8NI/AAAAAAAAmu4/OUNLse_hN2sUkeHzxoRWYWmUvn6OqnWWQCLcBGAsYHQ/s1600/48992181_2368337909903300_2220834138863173632_o.jpg",
                            Name = "Henry",
                            UserId = "another-token3"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Har master innen IT",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "John",
                            UserId = "another-token4"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Jeg er en ux-designer med 5 års erfaring",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Bjarte",
                            UserId = "another-token5"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Har IT-utdannelse og erfaring innenfor spillutvikling",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Anne",
                            UserId = "another-token6"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Har IT-utdannelse og erfaring 5 års erfaring innenfor webutvikling",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Oda",
                            UserId = "another-token7"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Liker å gå fjelltur. Har to katter",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Tom",
                            UserId = "another-token8"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Liker å lese og programmere",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Madeleine Olaussen",
                            UserId = "another-token9"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Har utdannelse innenfor IT og liker å gå fjelltur",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Kaare Nordvik",
                            UserId = "another-token10"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Er youtuber og liker å gå tur",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Anna Bjørgum",
                            UserId = "another-token11"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Har erfaring innenfor spillutvikling",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Christine Haaland",
                            UserId = "another-token12"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Epic gamer og elsker programmering",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Daniel Engen",
                            UserId = "another-token13"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Driver med programmering som hobby. Liker å gå tur",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Odin Karlsen",
                            UserId = "another-token14"
                        },
                        new
                        {
                            Id = 19,
                            Description = "Liker å bade",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Merete Olsen",
                            UserId = "another-token15"
                        },
                        new
                        {
                            Id = 20,
                            Description = "Liker å jobbe med blender og animasjon",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Astrid Larsen",
                            UserId = "another-token16"
                        },
                        new
                        {
                            Id = 21,
                            Description = "Er soundcloud-artist og har jobbet mye med ableton",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Thomas Bjørdal",
                            UserId = "another-token17"
                        },
                        new
                        {
                            Id = 22,
                            Description = "Har gått filmskole i lillehammer og har jobbet må mindre produksjoner",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Jan Johansen",
                            UserId = "another-token18"
                        },
                        new
                        {
                            Id = 23,
                            Description = "Har utdannelse innen foto. Liker å gå i skogen",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Susanne Rønne",
                            UserId = "another-token19"
                        },
                        new
                        {
                            Id = 24,
                            Description = "Elsker å jobbe med unity og 3d-spill. Epic gamer på fritiden",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Dorthe Kristensen",
                            UserId = "another-token20"
                        },
                        new
                        {
                            Id = 25,
                            Description = "l33t gamer og har 2 katter",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Henrik Jørgensen",
                            UserId = "another-token21"
                        },
                        new
                        {
                            Id = 26,
                            Description = "Liker å jobbe med react",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Hanne Nilsen",
                            UserId = "another-token22"
                        },
                        new
                        {
                            Id = 27,
                            Description = "Liker å jobbe med .NET og databaser",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Maja Øvrebø",
                            UserId = "another-token23"
                        },
                        new
                        {
                            Id = 28,
                            Description = "Har 20 års erfaring i filmbransjen",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Hedda",
                            UserId = "another-token24"
                        },
                        new
                        {
                            Id = 29,
                            Description = "Liker å jobbe med spillutvikling",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Martin Fosshaug",
                            UserId = "another-token25"
                        },
                        new
                        {
                            Id = 30,
                            Description = "Jobber til daglig med musikkproduksjon. Liker også å programmere",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Geir Torvik",
                            UserId = "another-token26"
                        },
                        new
                        {
                            Id = 31,
                            Description = "Har bachelorgrad i IT fra OsloMet",
                            ImageUrl = "https://www.shankarainfra.com/img/avatar.png",
                            Name = "Eivind Magnussen",
                            UserId = "another-token28"
                        });
                });

            modelBuilder.Entity("Lagalt.Models.UserComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("UserComments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2021, 3, 22, 15, 40, 0, 0, DateTimeKind.Unspecified),
                            Message = "Heyy!! Dette er en testmelding :))))",
                            ProjectId = 1,
                            UserId = 10
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2021, 3, 22, 16, 10, 0, 0, DateTimeKind.Unspecified),
                            Message = "Jeg er ikke helt sikker på hva dette kommentarfeltet skal brukes til hehe",
                            ProjectId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2021, 3, 22, 16, 15, 0, 0, DateTimeKind.Unspecified),
                            Message = "Ikke jeg heller",
                            ProjectId = 1,
                            UserId = 12
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2021, 2, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Message = "Når er oppstarten?",
                            ProjectId = 2,
                            UserId = 5
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2021, 2, 14, 10, 20, 0, 0, DateTimeKind.Unspecified),
                            Message = "Dunno!",
                            ProjectId = 2,
                            UserId = 7
                        });
                });

            modelBuilder.Entity("ProjectSkill", b =>
                {
                    b.Property<int>("ProjectsId")
                        .HasColumnType("int");

                    b.Property<int>("SkillsId")
                        .HasColumnType("int");

                    b.HasKey("ProjectsId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("ProjectSkill");

                    b.HasData(
                        new
                        {
                            ProjectsId = 1,
                            SkillsId = 8
                        },
                        new
                        {
                            ProjectsId = 1,
                            SkillsId = 11
                        },
                        new
                        {
                            ProjectsId = 1,
                            SkillsId = 13
                        },
                        new
                        {
                            ProjectsId = 2,
                            SkillsId = 8
                        },
                        new
                        {
                            ProjectsId = 2,
                            SkillsId = 18
                        },
                        new
                        {
                            ProjectsId = 3,
                            SkillsId = 10
                        },
                        new
                        {
                            ProjectsId = 3,
                            SkillsId = 16
                        },
                        new
                        {
                            ProjectsId = 4,
                            SkillsId = 1
                        },
                        new
                        {
                            ProjectsId = 4,
                            SkillsId = 14
                        },
                        new
                        {
                            ProjectsId = 5,
                            SkillsId = 10
                        },
                        new
                        {
                            ProjectsId = 5,
                            SkillsId = 11
                        },
                        new
                        {
                            ProjectsId = 5,
                            SkillsId = 14
                        },
                        new
                        {
                            ProjectsId = 6,
                            SkillsId = 5
                        },
                        new
                        {
                            ProjectsId = 6,
                            SkillsId = 19
                        },
                        new
                        {
                            ProjectsId = 7,
                            SkillsId = 12
                        },
                        new
                        {
                            ProjectsId = 7,
                            SkillsId = 18
                        },
                        new
                        {
                            ProjectsId = 8,
                            SkillsId = 20
                        },
                        new
                        {
                            ProjectsId = 9,
                            SkillsId = 11
                        },
                        new
                        {
                            ProjectsId = 9,
                            SkillsId = 14
                        },
                        new
                        {
                            ProjectsId = 10,
                            SkillsId = 21
                        });
                });

            modelBuilder.Entity("ProjectTheme", b =>
                {
                    b.Property<int>("ProjectsId")
                        .HasColumnType("int");

                    b.Property<int>("ThemesId")
                        .HasColumnType("int");

                    b.HasKey("ProjectsId", "ThemesId");

                    b.HasIndex("ThemesId");

                    b.ToTable("ProjectTheme");

                    b.HasData(
                        new
                        {
                            ProjectsId = 1,
                            ThemesId = 14
                        },
                        new
                        {
                            ProjectsId = 1,
                            ThemesId = 5
                        },
                        new
                        {
                            ProjectsId = 2,
                            ThemesId = 15
                        },
                        new
                        {
                            ProjectsId = 2,
                            ThemesId = 16
                        },
                        new
                        {
                            ProjectsId = 2,
                            ThemesId = 17
                        },
                        new
                        {
                            ProjectsId = 3,
                            ThemesId = 7
                        },
                        new
                        {
                            ProjectsId = 3,
                            ThemesId = 17
                        },
                        new
                        {
                            ProjectsId = 4,
                            ThemesId = 18
                        },
                        new
                        {
                            ProjectsId = 4,
                            ThemesId = 19
                        },
                        new
                        {
                            ProjectsId = 5,
                            ThemesId = 8
                        },
                        new
                        {
                            ProjectsId = 5,
                            ThemesId = 9
                        },
                        new
                        {
                            ProjectsId = 5,
                            ThemesId = 13
                        },
                        new
                        {
                            ProjectsId = 6,
                            ThemesId = 7
                        },
                        new
                        {
                            ProjectsId = 6,
                            ThemesId = 20
                        },
                        new
                        {
                            ProjectsId = 7,
                            ThemesId = 10
                        },
                        new
                        {
                            ProjectsId = 7,
                            ThemesId = 17
                        },
                        new
                        {
                            ProjectsId = 8,
                            ThemesId = 1
                        },
                        new
                        {
                            ProjectsId = 8,
                            ThemesId = 3
                        },
                        new
                        {
                            ProjectsId = 9,
                            ThemesId = 14
                        },
                        new
                        {
                            ProjectsId = 9,
                            ThemesId = 21
                        },
                        new
                        {
                            ProjectsId = 9,
                            ThemesId = 22
                        },
                        new
                        {
                            ProjectsId = 10,
                            ThemesId = 23
                        },
                        new
                        {
                            ProjectsId = 10,
                            ThemesId = 14
                        });
                });

            modelBuilder.Entity("ProjectUser", b =>
                {
                    b.Property<int>("ProjectsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("ProjectsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("ProjectUser");

                    b.HasData(
                        new
                        {
                            ProjectsId = 1,
                            UsersId = 1
                        },
                        new
                        {
                            ProjectsId = 1,
                            UsersId = 10
                        },
                        new
                        {
                            ProjectsId = 1,
                            UsersId = 12
                        },
                        new
                        {
                            ProjectsId = 2,
                            UsersId = 2
                        },
                        new
                        {
                            ProjectsId = 2,
                            UsersId = 5
                        },
                        new
                        {
                            ProjectsId = 2,
                            UsersId = 7
                        },
                        new
                        {
                            ProjectsId = 3,
                            UsersId = 2
                        },
                        new
                        {
                            ProjectsId = 4,
                            UsersId = 2
                        },
                        new
                        {
                            ProjectsId = 5,
                            UsersId = 2
                        },
                        new
                        {
                            ProjectsId = 6,
                            UsersId = 3
                        },
                        new
                        {
                            ProjectsId = 7,
                            UsersId = 16
                        },
                        new
                        {
                            ProjectsId = 7,
                            UsersId = 29
                        },
                        new
                        {
                            ProjectsId = 8,
                            UsersId = 1
                        },
                        new
                        {
                            ProjectsId = 9,
                            UsersId = 29
                        },
                        new
                        {
                            ProjectsId = 9,
                            UsersId = 13
                        });
                });

            modelBuilder.Entity("SkillUser", b =>
                {
                    b.Property<int>("SkillsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("SkillsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("SkillUser");

                    b.HasData(
                        new
                        {
                            SkillsId = 1,
                            UsersId = 1
                        },
                        new
                        {
                            SkillsId = 2,
                            UsersId = 1
                        },
                        new
                        {
                            SkillsId = 4,
                            UsersId = 1
                        },
                        new
                        {
                            SkillsId = 5,
                            UsersId = 2
                        },
                        new
                        {
                            SkillsId = 6,
                            UsersId = 2
                        },
                        new
                        {
                            SkillsId = 1,
                            UsersId = 2
                        });
                });

            modelBuilder.Entity("Lagalt.Models.Link", b =>
                {
                    b.HasOne("Lagalt.Models.Project", "Project")
                        .WithMany("Links")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Lagalt.Models.Portfolio", b =>
                {
                    b.HasOne("Lagalt.Models.User", "User")
                        .WithMany("Portofolios")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Lagalt.Models.Project", b =>
                {
                    b.HasOne("Lagalt.Models.Industry", "Industry")
                        .WithMany("Projects")
                        .HasForeignKey("IndustryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Industry");
                });

            modelBuilder.Entity("Lagalt.Models.ProjectApplication", b =>
                {
                    b.HasOne("Lagalt.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lagalt.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Lagalt.Models.UserComment", b =>
                {
                    b.HasOne("Lagalt.Models.Project", "Project")
                        .WithMany("UserComments")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lagalt.Models.User", "User")
                        .WithMany("UserComments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectSkill", b =>
                {
                    b.HasOne("Lagalt.Models.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lagalt.Models.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectTheme", b =>
                {
                    b.HasOne("Lagalt.Models.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lagalt.Models.Theme", null)
                        .WithMany()
                        .HasForeignKey("ThemesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectUser", b =>
                {
                    b.HasOne("Lagalt.Models.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lagalt.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SkillUser", b =>
                {
                    b.HasOne("Lagalt.Models.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lagalt.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lagalt.Models.Industry", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Lagalt.Models.Project", b =>
                {
                    b.Navigation("Links");

                    b.Navigation("UserComments");
                });

            modelBuilder.Entity("Lagalt.Models.User", b =>
                {
                    b.Navigation("Portofolios");

                    b.Navigation("UserComments");
                });
#pragma warning restore 612, 618
        }
    }
}
